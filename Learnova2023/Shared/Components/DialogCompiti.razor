
@using Shared.Classes
@inject HttpClient Http

<MudDialog  Class=" justify-content-center align-items-center mx-auto my-auto">

    <DialogContent>
        <MudCard Class="w-100 h-100">
            <EditForm Model="@(Compito)" >
                <DataAnnotationsValidator />
                                                 
                <MudCardContent Style="overflow-y:scroll">
                    
                    
                    <MudGrid>
                        <MudItem xs="6" >   
                            <MudTextField Label="Professore" AdornmentText="" Variant="MudBlazor.Variant.Outlined" T="string" ReadOnly=true Text=@tmp.Professore.ToString()></MudTextField>
                            @*trovare un metodo per fare il binding con la classe "Materia in modo da riuscire a cambiare la materia di un compito tramite Dialog"*@
                            <MudSelect Label="Materia" Variant="MudBlazor.Variant.Filled"  @bind-Value="tmp.Materia" ReadOnly=Readonly  T=@Materia >
                                @foreach(Materia mat in ListaMaterie)
                                {
                                    <MudSelectItem  T=Materia Value="mat" ></MudSelectItem>
                                }
                            </MudSelect>
                                
                        </MudItem>

          
                        <MudItem xs="6" >
                            <MudSelect Label="Tipo" Variant="MudBlazor.Variant.Filled" T="string" @bind-Value=@tmp.Tipo ReadOnly=Readonly>
                                @foreach (string tip in TipiCompiti)
                                {
                                    <MudSelectItem T=string Value=@tip>@tip</MudSelectItem>
                                }
                            </MudSelect>
                            
                            <MudDatePicker Label="Data" Variant="MudBlazor.Variant.Filled" T="string" ReadOnly=Readonly Date=@tmp.Date DateChanged="DataSpostata"></MudDatePicker>      
                        </MudItem>
                        
                        <MudItem xs="12">
                            <MudTextField Label="Descrizione" Lines="5" Variant="MudBlazor.Variant.Filled" T="string" ReadOnly=Readonly @bind-Text=@tmp.Descrizione></MudTextField>
                        </MudItem>
                            
                    </MudGrid>
                        
                </MudCardContent>
            </EditForm>
            
        </MudCard>
        
        
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        @if (stato.Details.GetType() == typeof(Professore))
        {
            <MudButton Color="Color.Success" Variant="MudBlazor.Variant.Filled" OnClick="Submit">Yes</MudButton>
        }
        
        
    </DialogActions>
</MudDialog>
@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public StatoApp stato { get; set; }

    [Parameter]
    public Compito Compito { get; set; }



    public Compito tmp { get; set; }

    private List<Materia> ListaMaterie = new List<Materia>();
    private string[] TipiCompiti = new string[4]{"Verifica","Interrogazione","Compito","Lezione"};
    public bool Readonly=true;

    protected override async Task OnInitializedAsync()
    {
        tmp = new Compito() {Id=Compito.Id,Professore=Compito.Professore,Materia=Compito.Materia,Tipo=Compito.Tipo,Date=Compito.Date,Descrizione=Compito.Descrizione };

        if(Compito.Professore != null)
        {
            if (stato.Details.GetType() == typeof(Professore) && (stato.Details.Equals(Compito.Professore) == true))
            {
                Readonly = false;
            }
        }
        else
        {
            tmp.Professore = stato.Details;
            Readonly = false;
        }
        string api = $"/api/Materia/GetMaterie?sk={stato.SessionString}";
        ListaMaterie = await Http.GetFromJsonAsync<List<Materia>>(api);


    }
    void DataSpostata(DateTime? dataScelta) => tmp.Date = dataScelta;


    public async Task Submit(){

        if (Compito.Id == 0 && Compito.Equals(tmp) == false)
        {
            string api = $"/api/Compiti/CreateCompito?idClasse={stato.idClasse}&date={tmp.Date.Value.ToString("s")}&tipo={tmp.Tipo}&idProfessore={tmp.Professore.Id}&idMateria={tmp.Materia.Id}&desc={tmp.Descrizione}&sk={stato.SessionString}";
            await Http.PostAsJsonAsync<Compito>(api, null);

        }
        else if (Compito.Equals(tmp) == false)
        {
            string api = $"/api/Compiti/UpdateCompito?idCompito={tmp.Id}&idClasse={stato.idClasse}&date={tmp.Date.Value.ToString("s")}&tipo={tmp.Tipo}&idMateria={tmp.Materia.Id}&desc={tmp.Descrizione}&sk={stato.SessionString}";
            await Http.PutAsJsonAsync<Compito>(api, null);
        }
        MudDialog.Close(DialogResult.Ok(true));
    }

   

    void Cancel() => MudDialog.Cancel();
}
