@inject StatoApp StatoApp
@using Classes


<div class="h-100 container-fluid d-flex justify-content-center align-items-center">
    <MudPaper Elevation="4" Class="w-100 m-5">
        
        <MudList @bind-SelectedItem=sium Clickable=true>
            @foreach (Classe c in Classi)
            {
                @*HREF ti manda ad una pagina ogni volta che si clicca, bisogna sostituire il tutto facendo il modo che si setti una variabile globale con l'id classe == a c.Id e poi utilizzare un Navigate to o altra roba*@
                <MudListItem Value=c.Id Href=@($"/{StatoApp.Details.GetType().Name}/Calendario") OnClick="Nav">
                    <MudStack Row="true">
                        <MudAvatar  Color="Color.Secondary">@($"{c.Anno}{c.Sezione}")</MudAvatar>
                        <div class="d-flex justify-content-start align-items-center text w-100 fw-bold" >@c.Indirizzo</div>
                            <MudIconButton Style="z-index:10" Class="justify-content-end align-items-end" Icon="@Icons.Material.Filled.CalendarMonth" Color="Color.Primary" Href=@($"/{StatoApp.Details.GetType().Name}/Calendario")>Calendario</MudIconButton>
                    </MudStack>
                    
                </MudListItem>
                <MudDivider DividerType="DividerType.Middle" Light="true"></MudDivider>
            }
        </MudList>
    </MudPaper>
    
    
    


</div>



@code {
    [Parameter]
    public List<Classe> Classi { get; set; }
    public MudListItem sium = new MudListItem();
    protected override async Task OnInitializedAsync()
    {

        //Classi = (new List<Classe> { new Classe(1, 1, 'A', "Informatica"), new Classe(2, 2, 'B', "Informatica"), new Classe(3, 4, 'A', "Informatica"), new Classe(4, 5, 'F', "Chimica"), new Classe(5, 3, 'F', "Chimica"), new Classe(6, 1, 'O', "Turismo"), new Classe(7, 2, 'I', "Classico"), new Classe(8, 1, 'I', "Classico"), new Classe(9, 1, 'L', "Linguistico"), new Classe(10, 5, 'L', "Linguistico"), new Classe(11, 1, 'D', "Alberghiero") });
        Classi.OrderBy(x => x.Sezione);

    }
    public async Task Nav()
    {
        StatoApp.idClasse = int.Parse(sium.Value.ToString());
    }
}
