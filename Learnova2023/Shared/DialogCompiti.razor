
@using Shared.Classes

<MudDialog Class=" justify-content-center align-items-center mx-auto my-auto">

<MudDialog>
    <DialogContent>
        <MudCard Class="w-100 h-100">
            <EditForm Model="@tmp" >
                <DataAnnotationsValidator />
                                                 
                <MudCardContent Style="overflow-y:scroll">
                    
                    
                    <MudGrid>
                        <MudItem xs="6" >
                                
                            <MudTextField Label="Professore" AdornmentText="" Variant="MudBlazor.Variant.Outlined" T="string" ReadOnly=Readonly Text=@tmp.Professore.ToString()></MudTextField>
                            <MudTextField Label="Materia" Variant="MudBlazor.Variant.Filled" T="string" ReadOnly=Readonly @bind-Value=@tmp.Materia></MudTextField>
                                
                        </MudItem>

          
                        <MudItem xs="6" >
                            <MudTextField Variant="MudBlazor.Variant.Filled" T="string" @bind-Value=@tmp.Tipo ReadOnly=Readonly></MudTextField>
                            <MudDatePicker Label="Data" Variant="MudBlazor.Variant.Filled" T="string" ReadOnly=Readonly @bind-Value=@tmp.Date></MudDatePicker>
                                
                        </MudItem>
                        <MudItem >
                                
                        </MudItem >
                        <MudItem xs="12">
                            <MudTextField Label="Descrizione" Lines="5" Variant="MudBlazor.Variant.Filled" T="string" ReadOnly=Readonly @bind-Text=@Compito.Descrizione></MudTextField>
                        </MudItem>
                            
                    </MudGrid>
                        
                </MudCardContent>
            </EditForm>
            
        </MudCard>
        
        
    </DialogContent>
    <DialogActions>
    </DialogActions>
</MudDialog>
@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public StatoApp stato { get; set; }

    [Parameter]
    public Compito Compito { get; set; }

    public Compito tmp { get; set; }

    public bool Readonly=true;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        tmp = Compito;
        if (stato.Details.GetType()!=typeof(Studente))
        {
            Readonly = false;
        }
    }

    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();
}
