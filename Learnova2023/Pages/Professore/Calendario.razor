@page "/Professore/Calendario"
@layout MainLayout
@inject Radzen.DialogService DialogService
@inject HttpClient Http
@inject StatoApp StatoApp
@using Radzen
@using Radzen.Blazor
@using Radzen.Blazor.Rendering
@using Shared.Classes;

<RadzenDialog />
<RadzenContextMenu />
<RadzenTooltip />


<RadzenScheduler @ref="scheduler" LoadData=@LoadData SlotSelect=@OnSlotSelect  Data="@Compiti" TItem="Compito" StartProperty="Date" EndProperty="Date" TextProperty="Descrizione">
    <RadzenMonthView />
</RadzenScheduler>

<style>
    .rz-scheduler-nav-views .rz-button.rz-primary.rz-state-active {
        color: @Colors.Orange.Darken3 !important;
        background-color: @Colors.Amber.Lighten4 !important
    }

</style>


@code {
    public RadzenScheduler<Compito> scheduler;
    public Professore Prof = new Professore("Maurizio","Sintuzzi");
    public DateTime d = new DateTime(2008, 5, 1, 8, 30, 52);
    List<Compito> Compiti = new List<Compito>()
    {
        new Compito(new DateTime(2023, 5, 1, 8, 30, 52),"Verifica",new Professore("Maurizio","Sintuzzi"),"Sistemi e Reti","aaaaaaa"),
        new Compito(new DateTime(2023, 5, 1, 8, 30, 52),"Verifica",new Professore("Maurizio","Sintuzzi"),"Matematica","bbbbbbb"),
        new Compito(new DateTime(2023, 5, 1, 8, 30, 52),"Verifica",new Professore("Maurizio","Sintuzzi"),"Informatica","ccccccc"),
        new Compito(new DateTime(2023, 5, 1, 8, 30, 52),"Verifica",new Professore("Maurizio","Sintuzzi"),"TPSIT","ddddddd")
    };

    async Task OnSlotSelect(SchedulerSlotSelectEventArgs args)
    {
        

        if (args.View.Text != "Year")
        {
            
            Compito data = await DialogService.OpenAsync("Add Appointment",null);

            if (data != null)
            {
                Compiti.Add(data);
                // Either call the Reload method or reassign the Data property of the Scheduler
                await scheduler.Reload();
            }
        }
    }

    async Task OnAppointmentSelect(SchedulerAppointmentSelectEventArgs<Appointment> args)
    {
        

        //await DialogService.OpenAsync("Edit Appointment", new Dictionary<string, object> { { "Appointment", args.Data } });

        await scheduler.Reload();
    }

    public async Task LoadData(SchedulerLoadDataEventArgs args)
    {
        
        //string api = $"/api/Login/GetCompiti?idClasse={}&Sessionkey={StatoApp.SessionString}";
        //Compiti = await Http.GetAsyncFromJson<Compito>()
    }

}









