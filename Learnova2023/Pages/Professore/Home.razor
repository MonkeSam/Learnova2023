@page "/Professore/Home"
@layout EmptyLayout
@inject StatoApp StatoApp
@inject HttpClient Http
@inject NavigationManager Navigation
@using Shared.Classes
@using Learnova2023.Shared.Components



<div class="container-fluid h-100  d-flex justify-content-center align-items-center" >
    <MudGrid Class=" h-100 d-flex ">

        <MudItem xs=3 Class=" d-flex justify-content-center align-items-center mb-9 ">
            
            <MudPaper Class="w-100 d-flex justify-content-center align-items-start" Elevation=3>
                
                <div class="container-fluid m-2 justify-content-center align-items-center">
                    
                    <div class="d-flex justify-content-center align-items-end">
                        <MudIcon Class="text-center" Icon="@Icons.Material.Filled.Home" Size="Size.Large"></MudIcon>
                        <h3 class="text-center m-0">HOME</h3>
                    </div>
                    
                    <div class="d-flex justify-content-center align-items-top">
                        <MudCard Class="w-100   justify-content-center align-items-center" >
                            <MudCardHeader >
                                
                                <CardHeaderContent>
                                    <MudField Variant=MudBlazor.Variant.Text Label="Username">@StatoApp.Username</MudField>
                                </CardHeaderContent>
                                
                                
                            </MudCardHeader>
                            <MudCardContent>
                                <MudItem>
                                    <MudField Class="fw-bold" Label="Nome">@StatoApp.Details.Nome</MudField>
                                    <MudField Class="fw-bold" Label="Cognome">@StatoApp.Details.Cognome</MudField>
                                    <MudTextField T=string InputType="@PasswordInput" OnAdornmentClick="ButtonTestclick" AdornmentAriaLabel="Show Password" Label="Stipendio" Adornment="Adornment.End" IconSize=Size.Small AdornmentIcon="@PasswordInputIcon" ReadOnly=true Text="@("\u20AC"+StatoApp.Details.Stipendio.ToString())"></MudTextField>


                                </MudItem>
                                <MudItem Class="my-2">
                                    <MudExpansionPanels>
                                        <MudExpansionPanel Class="fw-bold" Text="Materie">
                                            @foreach (Materia m in Materie)
                                            {
                                                <MudText>@m.Nome.ToUpper()</MudText>
                                                <MudDivider Light DividerType="DividerType.FullWidth"></MudDivider>
                                            }
                                        </MudExpansionPanel>
                                    </MudExpansionPanels>
                                </MudItem>
                                <MudItem Class="d-flex justify-content-end align-items-center">
                                    <MudButton ButtonType="MudBlazor.ButtonType.Button"   Variant="MudBlazor.Variant.Filled" OnClick="@Logout" Color=Color.Error>Logout</MudButton>
                                </MudItem>
                            </MudCardContent>
                        </MudCard>
                    </div>

                </div>

            </MudPaper>
        </MudItem>
        <MudItem xs=9 Class="w-100 h-100 justify-content-center align-items-center ">

            <ElencoClassi ChangeList="ChangeList" SelectedList="@Enum.GetName(CurrentClassi)" Classi=@Classi></ElencoClassi>

        </MudItem>



    </MudGrid>
</div>





@code {



    [CascadingParameter]
    public EmptyLayout Layout { get; set; }



    bool currentState=false;
    public enum currentList
    {
        Altre_Classi=0,Le_Tue_classi=1
    }
    public currentList CurrentClassi { get; set; }

    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
    public List<Classe> Classi=new List<Classe>();
    public List<Materia> Materie = new List<Materia>();

    public bool render = true; 

    public void Logout()
    {
        render = false;
        Navigation.NavigateTo("/");
        StatoApp = new StatoApp();
    }
    protected override bool ShouldRender()
    {
        return render;
    }


    protected override async Task OnInitializedAsync()
    {
        
        CurrentClassi = !currentState ? currentList.Le_Tue_classi : currentList.Altre_Classi;
        await LoadClassi();
        string api = $"/api/Professore/GetCompetenza?id={StatoApp.Details.Id}&sk={StatoApp.SessionString}";
        Materie = await Http.GetFromJsonAsync<List<Materia>>(api);

    }

    void ButtonTestclick()
    {
        if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }
    public async Task ChangeList()
    {
        if (currentState)
        {
            currentState = false;
            CurrentClassi = currentList.Le_Tue_classi;
        }
        else
        {
            currentState = true;
            CurrentClassi = currentList.Altre_Classi;
        }
        await LoadClassi();
    }
    public async Task LoadClassi()
    {
        Layout.Loading = true;
        string api;

        if (currentState)
        {
            api = $"/api/Classi/GetClassi?sk={StatoApp.SessionString}";
        }
        else
        {
            api = $"/api/Professore/GetAssegnazione?id={StatoApp.Details.Id}&sk={StatoApp.SessionString}";
        }

        Classi = await Http.GetFromJsonAsync<List<Classe>>(api);
        Layout.Loading = false;
    }
    MudTheme MyCustomTheme = new MudTheme()
        {
            Palette = new PaletteLight()
            {

                Primary = Colors.Yellow.Darken3,
                Secondary = Colors.Orange.Darken4,
                Tertiary=Colors.Amber.Lighten3
                
            }
        };
}
